---

- name: Install Docker Compose plugin
  ansible.builtin.package:
    name: docker-compose-plugin
    state: present

- name: Fail on spaces in service names
  when:
    - docker_compose_service is defined
    - docker_compose_service != None
    - docker_compose_service | length > 0
  with_dict: "{{ docker_compose_service }}"
  ansible.builtin.assert:
    that:
      - "' ' not in item.key"
  no_log: true

- name: Create Docker compose service
  when:
    - item.value.compose is defined
    - item.value.compose != None
    - item.value.compose | length > 0
  with_dict: "{{ docker_compose_service }}"
  ansible.builtin.template:
    src: docker-compose.service.j2
    dest: "/etc/systemd/system/docker-compose_{{ item.key }}.service"
    owner: root
    group: root
    mode: "0644"
  register: docker_compose_service_service
  no_log: true

- name: Create Docker compose service working directory
  when:
    - item.value.compose is defined
    - item.value.compose != None
    - item.value.compose | length > 0
  with_dict: "{{ docker_compose_service }}"
  ansible.builtin.file:
    path: "/opt/docker-compose_{{ item.key }}"
    state: directory
    mode: '0755'
    owner: root
    group: root
  no_log: true

- name: Create Docker compose env
  when:
    - item.value.compose is defined
    - item.value.compose != None
    - item.value.compose | length > 0
  with_dict: "{{ docker_compose_service }}"
  ansible.builtin.template:
    src: docker-compose.env.j2
    dest: "/opt/docker-compose_{{ item.key }}/.env"
    owner: root
    group: root
    mode: "0644"
  register: docker_compose_service_env
  no_log: true

- name: Create Docker compose file
  when:
    - item.value.compose is defined
    - item.value.compose != None
    - item.value.compose | length > 0
  with_dict: "{{ docker_compose_service }}"
  ansible.builtin.template:
    src: docker-compose.j2
    dest: "/opt/docker-compose_{{ item.key }}/docker-compose.yml"
    owner: root
    group: root
    mode: "0644"
  register: docker_compose_service_compose
  no_log: true

- name: (Re)start Docker compose service
  when:
    - docker_compose_service is defined
    - docker_compose_service != None
    - docker_compose_service | length > 0
  with_items: "{{ (docker_compose_service_service.results + docker_compose_service_env.results + docker_compose_service_compose.results) | selectattr('changed', 'equalto', true) | map(attribute='item.key') | list | unique }}"
  ansible.builtin.systemd:
    state: restarted
    enabled: true
    daemon_reload: true
    name: "docker-compose_{{ item }}.service"
